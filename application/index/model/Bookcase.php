<?php

namespace app\index\model;


class Bookcase extends Common
{


    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }


    /**
     * 查找某城市下所有书柜
     *
     * @param $city
     *
     * @return array|bool
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function casesList($city, $lat, $lng)
    {
        if ( ! empty($city) || $city != null) {
            $data = $this->where('city', $city)->select()->toArray();
            foreach ($data as &$value) {
                $distance          = (2 * 6378.137 * ASIN(
                        SQRT(
                            POW(
                                SIN(
                                    3.1415926535898 * ($lat - $value['lat'])
                                    / 360
                                ), 2
                            ) + COS(3.1415926535898 * $lat / 180) * COS(
                                $value['lat'] * 3.1415926535898 / 180
                            ) * POW(
                                SIN(
                                    3.1415926535898 * ($lng - $value['lng'])
                                    / 360
                                ), 2
                            )
                        )
                    ));
                $value['distance'] = round($distance, 1);
            }

            return $data;
        }

        return false;

    }


    /**
     * @param int $id
     *
     * @return array|bool
     * @throws \think\Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function caseInfo(int $id)
    {
        // 查询书柜下所有抽屉id
        $case = $this->where('id', $id)->field('id,name,address,cover')->find();
        if ( ! empty($case)) {
            // 查询书柜下所有抽屉下图书
            $drawers = $this->hasMany('drawer', 'pid')
                ->join('books', 'books.pid=drawer.id')
                ->join('book', 'book.id=books.pid')
                ->where('drawer.pid', $case->getAttr('id'))
                //                ->field(
                //                    'book.title,book.press,book.author,book.type,book.cover,book.price,book.borrow,
                //                book.buyout,drawer.number drawerNo,books.number booksNo,book.id bId'
                //                )->select();
                ->field(
                    'book.title,book.type,book.details,book.cover,book.borrow,drawer.number drawerNo,books.number booksNo,book.id bId'
                )->select();

            $case_arr            = $case->toArray();
            $case_arr['drawers'] = $drawers->toArray();

            return $case_arr;
        }

        return false;
    }


    /**
     * 获取某柜子下所有抽屉
     *
     * @param $case_id
     *
     * @return array|bool
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function drawers($case_id)
    {
        if ( ! empty($case_id)) {
            return $this->hasMany('drawer', 'pid')->where('pid', $case_id)
                ->select()->hidden(['pid'])
                ->toArray();
        }

        return false;
    }

    /**
     * @param $bname
     *
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function searchBook($bname)
    {
        if ( ! empty($bname)) {
            $data = $this->hasMany('drawer', 'pid')
                ->join('books', 'books.pid=drawer.id')
                ->join('book', 'book.id=books.pid')
                ->where("book.title", 'like', '%'.$bname.'%')
                ->field(
                    'book.title,book.press,book.author,book.type,book.cover,book.price,book.borrow,
                book.buyout,drawer.number drawerNo,drawer.pid caseId,books.number booksNo,book.id bId'
                )
                ->select()
                ->toArray();

            // 兑换柜子信息
            $case_ids = [];
            foreach ($data as $key => $value) {
                // 提取case_id
                if ( ! in_array($value['caseId'], $case_ids)) {
                    array_push($case_ids, $value['caseId']);
                }
            }
            $case_ids_str = implode(",", $case_ids);
            $case         = $this->where('id', 'in', $case_ids_str)
                ->select()
                ->toArray();
            $case_arr     = [];
            foreach ($case as $key => $value) {
                array_push($case_arr, [$value["id"] => $value]);
            }
            dump($case_arr);
        }
    }

}
